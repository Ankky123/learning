Git help
git init
git remote add origin https://github.com/Rishabh-ADP/Offline_Utility.git
git pull origin	
git pull origin rishabh
git checkout -b ankit (make local branch)
git push origin ankit (if ankit not available on remote, branch will be added)


git config --global user.name "ankitmangal"
git config --global user.email "ankitmangal@arundataprocessing.com"

delete branch
git branch --delete <branchname>
git push origin -d branch-name


To stop tracking a file, we must remove it from the index:
git rm --cached <file>
To remove a folder and all files from the track in the folder recursively:
git rm -r --cached <folder>

Abort a git merge
git merge --abort


Set upstream
git branch --set-upstream-to <remote-branch>

git push --set-upstream origin ITR7_22_23


If you're already in conflicted state, and you want to just accept all of theirs:
git checkout --theirs .
git add .
If you want to do the opposite:
git checkout --ours .
git add .

After writing commit message, just press Esc Button and then write :wq or :wq! and then Enter to close the unix file.


git count lines of code
git ls-files | xargs cat | wc -l

To unstage a file from staging area (git add)
git reset <file>

To add the differences of a git patch file
git diff and git apply file.patch

git add -p (this will ask us to add hunkwise)


To obtain only the remote URL:
git config --get remote.origin.url

If you require full output, and you are on a network that can reach the remote repo where the origin resides:
git remote show origin

git remote -v
# View existing remotes
# origin  https://github.com/user/repo.git (fetch)
# origin  https://github.com/user/repo.git (push)

git remote set-url origin https://github.com/user/repo2.git
# Change the 'origin' remote's URL

git remote -v
# Verify new remote URL
# origin  https://github.com/user/repo2.git (fetch)
# origin  https://github.com/user/repo2.git (push)


git config --global credential.useHttpPath true

escape vim > :wq

Ammending Commits
git commit --amend

Rename a branch (switch on to the branch you want to rename)
git branch -m newName 

Branch > A branch is a reference that points to a commit
HEAD is a reference that points to a branch

Merge branches
Switch or checkout the branch you want to merge the changes into (the receiving branch)
Use the git merge command to merge the changes from a specific branch into the current branch

git differences commands
git diff > Compares Staging Area and Working Directory
How to read git diff??
without additional options, git diff lists all the changes in our working directory that are not staged for next commit.
git diff HEAD > lists all changes in the working tree since your last commit (this will include the staged changes)
git diff --staged or --cached > will list the changed between the staging area and our last commit
"Show me what will be included in my commit if I run git commit right now"
This also works with file name at the end
git diff HEAD <fileName>
git diff branch1..branch2


